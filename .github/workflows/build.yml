name: Build

on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g., for dependabot pull requests)
  push:
    branches: [ main ]

  # Trigger the workflow on any pull request
  pull_request:

  # Trigger the workflow when called by another workflow
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          fetch-depth: 0
          filter: tree:0
          submodules: recursive

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9"

      - name: Restore project
        run: |
          dotnet tool restore

      - name: Build solution
        run: |
          dotnet build -c Release

      - name: Upload thunderstore artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunderstore-build
          path: |
            ./Thunderstore/*/assets/thunderstore.toml.user
            ./Thunderstore/*/bin/Release/netstandard2.1/dist/*.zip

  build-platform-binaries:
    name: Build ${{ matrix.pack-type }} platform binary for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        kind: [ 'linux', 'windows', 'macOS' ]
        pack-type: [ 'zip', 'tarball', 'deb' ]
        include:
          - kind: 'linux'
            target: 'linux-x64'
            os: 'ubuntu-latest'
          - kind: 'windows'
            target: 'win-x64'
            os: 'windows-latest'
          - kind: 'macOS'
            target: 'osx-x64'
            os: 'macos-latest'

          - pack-type: 'zip'
            msbuild-target: 'CreateZip'
            artifact-extension: '.zip'
          - pack-type: 'deb'
            msbuild-target: 'CreateDeb'
            artifact-extension: '.deb'
          - pack-type: 'tarball'
            msbuild-target: 'CreateTarball'
            artifact-extension: '.tar.gz'
        exclude:
          - kind: 'windows'
            pack-type: 'tarball'
          - kind: 'windows'
            pack-type: 'deb'
          - kind: 'macOS'
            pack-type: 'deb'
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          fetch-depth: 0
          filter: tree:0
          submodules: recursive

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9"

      - name: Restore project tools
        run: |
          dotnet tool restore

      - name: Build app project
        run: |
          dotnet build AvaloniaBepInExConsole.App/AvaloniaBepInExConsole.App.csproj -c ReleaseApp -t:${{ matrix.msbuild-target }} -r "${{ matrix.target }}" --self-contained true -f net8.0

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary-${{ matrix.pack-type }}
          path: ./AvaloniaBepInExConsole.App/bin/ReleaseApp/net8.0/${{ matrix.target }}/*${{ matrix.artifact-extension }}
